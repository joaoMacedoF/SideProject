/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.project.api;

import com.project.model.ErrorResponseObject;
import com.project.model.ResponseDtoListBookDto;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Api(value = "Library", description = "the Library API")
public interface LibraryApi {

    default LibraryApiDelegate getDelegate() {
        return new LibraryApiDelegate() {};
    }

    /**
     * GET /library/books : getAllBooksInLibrary
     *
     * @return OK (status code 200)
     *         or Common error (status code 400)
     *         or The user doesn&#39;t have permission to make the operation. (status code 403)
     */
    @ApiOperation(value = "getAllBooksInLibrary", nickname = "getAllBooksInLibraryUsingGET", notes = "", response = ResponseDtoListBookDto.class, tags={ "Library", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ResponseDtoListBookDto.class),
        @ApiResponse(code = 400, message = "Common error", response = ErrorResponseObject.class),
        @ApiResponse(code = 403, message = "The user doesn't have permission to make the operation.", response = ErrorResponseObject.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/library/books",
        produces = { "application/json" }
    )
    default ResponseEntity<ResponseDtoListBookDto> getAllBooksInLibraryUsingGET() {
        return getDelegate().getAllBooksInLibraryUsingGET();
    }

}
